step37:
------
	Create a "services" folder inside 'src' folder.


step38:
-------
	Create a EmployeeService.js file inside "services" folder.

EmployeeService.js 
------------------
import axios from 'axios';
const EMPLOYEE_API = "http://localhost:9191/api/v1/employees";

class EmployeeService
{
       addEmployee(employee)
       {
            return axios.post(EMPLOYEE_API,employee);
       } 
}
export default new EmployeeService();


step39:
-------
	Create a "CreateEmployee.js" component inside "components" folder.

CreateEmployee.js 
-----------------

function CreateEmployee() {
  return (
    <div>
        Create Employee Component
    </div>
  )
}

export default CreateEmployee


step40:
-------
	Add CreateEmployee component to routing file i.e App.js.

App.js 
------
import './App.css';
import CreateEmployee from './components/CreateEmployee';
import EmployeeList from './components/EmployeeList';
import Footer from './components/Footer';
import Header from './components/Header';
import {BrowserRouter,Routes,Route} from 'react-router-dom';
function App()
{

    return (
        <div className="bg-color">
            <Header/>
            
            <BrowserRouter>
            <div className='container'>
                <Routes>
                    <Route exact path='/' element={<EmployeeList/>}></Route>
                    <Route path='/employees' element={<EmployeeList/>}></Route>
                    <Route path='/add-emp' element={<CreateEmployee/>}></Route>
                </Routes>
            </div>
            </BrowserRouter>

            <Footer/>
        </div>
    )
}
export default App;

step41:
-------	
	Create Add button inside EmployeeList component.

EmployeeList.js
---------------
import {useState} from 'react';
import {useTypewriter,Cursor} from 'react-simple-typewriter';
import { Link } from 'react-router-dom';
function EmployeeList()
{
    const [employees,setEmployees]= useState([]);

    const [value] = useTypewriter({
        words: ["Details","List","Info"],
        loop:true,
        typeSpeed:120,
        deleteSpeed:80
    })


    return(
        <div className='container pt-5'>
                <h4 className='text-center pt-5'> Employee {value} <Cursor/></h4>

                <div className='row pt-5'>
                <Link to="/add-emp" className='btn btn-warning mb-2' style={{width:"250px"}}> Add Employee </Link>    
                <table className='table table-bordered table-striped'>
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>DOJ</th>
                            <th>Department</th>
                            <th>Designation</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {
                            employees.map(employee=>{
                                return <tr key={employee.id}>
                                            <td>{employee.id}</td>
                                            <td>{employee.name}</td>
                                            <td>{employee.doj}</td>
                                            <td>{employee.dept.deptName}</td>
                                            <td>{employee.dept.designation}</td>
                                        </tr>
                            })
                        }
                    </tbody>

                </table>
                </div>
        </div>
    )
}
export default EmployeeList;


step42:
-------
	Create a form inside CreateEmployee.js file to insert the data.

CreateEmployee.js
--------------------------
import { useState } from "react"
import { useNavigate } from "react-router-dom"
import EmployeeService from "../services/EmployeeService";
function CreateEmployee() 
{

    const navigate = useNavigate();

    const [employees,setEmployees]=useState({
        name:"",
        doj:"",
        dept:{
            deptName:"",
            designation:""
        }
    })

    const [errors,setErrors]=useState({
        name:"",
        doj:"",
        deptName:"",
        designation:""
    })

    const handleChange=(e)=>{
        e.preventDefault();
        const {name,value}=e.target;
        if(name=="name" || name=="doj")
        {
               setEmployees({...employees,[name]:value}); 
        }
        else
        {
            setEmployees({...employees,dept:{...employees.dept,[name]:value}});
        }

        setErrors({...errors,[name]:""});
    }

    const handleCancel=(e)=>{
        e.preventDefault();
        navigate("/");
    }

     const dateFormat=(date)=>{
        const d = new Date(date);
        const day = String(d.getDate()).padStart(2,"0");
        const month = String(d.getMonth()+1).padStart(2,"0");
        const year = d.getFullYear();
        return `${day}-${month}-${year}`;
    }



    const handleSubmit=(e)=>{
        e.preventDefault();
        if(validate())
        {
            const formattedDate = dateFormat(employees.doj);
            const employeeData=
            {
                ...employees,doj:formattedDate
            } 

            EmployeeService.addEmployee(employeeData).then(res=>{
                navigate("/");
            })

        }
    }

    const validate=(e)=>{
        const formErrors = {};
        let isValid=true;

        if(!employees.name)
        {
            formErrors.name="Name is mandatory";
            isValid=false;
        }
        if(!employees.doj)
        {
            formErrors.doj="Date is mandatory";
            isValid=false;
        }
        if(!employees.dept.deptName)
        {
            formErrors.deptName="Department name is mandatory";
            isValid=false;
        }
        if(!employees.dept.designation)
        {
            formErrors.designation="Designation is mandatory";
            isValid=false;
        }
        setErrors(formErrors);
        return isValid;
    }


  return (
    <div className="mt-5">
        <div className="container pt-3">
        <div className="card w-50 offset-3 p-3">
               <h5 className="text-center py-3"> Add Employees </h5>
               <form>
                    <label>Name:</label>
                    <input type="text" id="name" name="name" className="form-control"
                    value={employees.name}
                    onChange={handleChange}/>
                    {errors.name && <small className="text-danger"> {errors.name}</small>}
                    <br/>

                    <label>DOJ:</label>
                    <input type="date" id="doj" name="doj" className="form-control"
                    value={employees.doj}
                    onChange={handleChange}/>
                    {errors.doj && <small className="text-danger"> {errors.doj}</small>}
                    <br/>

                    <label>Department:</label>
                    <input type="text" id="deptName" name="deptName" className="form-control"
                    value={employees.dept.deptName}
                    onChange={handleChange}/>
                    {errors.deptName && <small className="text-danger"> {errors.deptName}</small>}
                    <br/>

                    <label>Designation:</label>
                    <input type="text" id="designation" name="designation" className="form-control"
                    value={employees.dept.designation}
                    onChange={handleChange}/>
                    {errors.designation && <small className="text-danger"> {errors.designation}</small>}
                    <br/>

                    <button className="btn btn-danger mt-3" onClick={handleCancel}> cancel </button>
                    <button className="btn btn-success mt-3 float-end" onClick={handleSubmit}> submit </button>
               </form>
        </div>
        </div>
    </div>
  )
}

export default CreateEmployee

step43
------
	Create a GET Mapping logic inside "EmployeeService.java" file.

EmployeeService.java
-------------------
package com.ihub.www.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ihub.www.model.Employee;
import com.ihub.www.repo.EmployeeRepository;

@Service
public class EmployeeService 
{
	@Autowired 
	EmployeeRepository employeeRepository;
	
	public Employee addEmployee(Employee employee)
	{
		return employeeRepository.save(employee);
	}
	
	public List<Employee> getAllEmployees()
	{
		return employeeRepository.findAll();
	}
}


step44:
------
	Create a GET Mapping logic inside "EmployeeController.java" file.

EmployeeController.java
-----------------------
package com.ihub.www.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.ihub.www.model.Employee;
import com.ihub.www.service.EmployeeService;

@CrossOrigin(origins = "http://localhost:3000")
@RestController
@RequestMapping("/api/v1")
public class EmployeeController
{
	@Autowired
	EmployeeService employeeService;
	
	@PostMapping("/employees")
	public Employee addEmployee(@RequestBody Employee employee)
	{
		return employeeService.addEmployee(employee);
	}
	
	@GetMapping("/employees")
	public List<Employee> getAllEmployees()
	{
		return employeeService.getAllEmployees();
	}
}

step45:
------
	Check GET Mapping request in POSTMAN tool.
	ex:
		Method 		URL
		------		----
		GET		http://localhost:9191/api/v1/employees


step46:
------
	Add getAllEmployees() method inside EmployeeService.js file.

EmployeeService.js
-------------------
import axios from 'axios';
const EMPLOYEE_API = "http://localhost:9191/api/v1/employees";

class EmployeeService
{
       addEmployee(employee)
       {
            return axios.post(EMPLOYEE_API,employee);
       } 
       getAllEmployees()
       {
            return axios.get(EMPLOYEE_API);
       }
}
export default new EmployeeService();

step47:
-------
	Call addAllEmployees() method inside EmployeeList.js component.

EmployeeList.js 
----------------
import {useEffect, useState} from 'react';
import {useTypewriter,Cursor} from 'react-simple-typewriter';
import { Link } from 'react-router-dom';
import EmployeeService from '../services/EmployeeService';
function EmployeeList()
{
    const [employees,setEmployees]= useState([]);


    const [value] = useTypewriter({
        words: ["Details","List","Info"],
        loop:true,
        typeSpeed:120,
        deleteSpeed:80
    })

    useEffect(()=>{
        EmployeeService.getAllEmployees().then(res=>{
            setEmployees(res.data);
        })
    },[])


    return(
        <div className='container pt-5'>
                <h4 className='text-center pt-5'> Employee {value} <Cursor/></h4>

                <div className='row pt-5'>
                <Link to="/add-emp" className='btn btn-warning mb-2' style={{width:"250px"}}> Add Employee </Link>    
                <table className='table table-bordered table-striped'>
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>DOJ</th>
                            <th>Department</th>
                            <th>Designation</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {
                            employees.map(employee=>{
                                return <tr key={employee.id}>
                                            <td>{employee.id}</td>
                                            <td>{employee.name}</td>
                                            <td>{employee.doj}</td>
                                            <td>{employee.dept.deptName}</td>
                                            <td>{employee.dept.designation}</td>
                                            <td></td>
                                        </tr>
                            })
                        }
                    </tbody>

                </table>
                </div>
        </div>
    )
}
export default EmployeeList;











 












