Project Structure 
----------------
backend 
|
|---src/main/java
|	|
	|---com.ihub.www (base pkg)
		|
		|---BackendApplication.java 

	|---com.ihub.www.model 
		|
		|---Employee.java
		|---Department.java

	|---com.ihub.www.repo 
		|
		|---EmployeeRepository.java (interface)
		|---DepartmentRepository.java (interface)
	
	|---com.ihub.www.exception 
		|
		|---ResourceNotFoundException.java
	|
	|---com.ihub.www.service
		|
		|---EmployeeService.java
		
	|---com.ihub.www.controller
		|
		|---EmployeeController.java
		
		
|---src/main/resources
		|
		|---application.properties 
|
|---src/test/java
|
|---pom.xml 

step20:
------
	Create a spring starter project i.e backend.
	ex:
		starters:
				Spring Web 
				Spring Data JPA 
				MySQL Driver 
				Lombok 
				Spring Boot DevTools 

step21:
------
	Create a "com.ihub.www.model" package inside "src/main/java" folder.
	
step22:
------
	Create a Employee.java file inside "com.ihub.www.model" package.

Employee.java
-------------
package com.ihub.www.model;

import java.util.Date;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import jakarta.transaction.Transactional;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Table(name="employees")
@Data
@NoArgsConstructor
@AllArgsConstructor
@Transactional
public class Employee 
{
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private long id;
	
	@Column
	private String name;
	
	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern="dd-MM-yyyy")
	private Date doj;
	
	@OneToOne(cascade = CascadeType.ALL)
	@JoinColumn(name = "dept_fk")
	private Department dept;
}


step23:
-------
	Create a Department.java file inside "com.ihub.www.model" package.

Department.java
--------------
package com.ihub.www.model;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.transaction.Transactional;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Table
@Data
@NoArgsConstructor
@AllArgsConstructor
@Transactional
public class Department 
{
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	private long id;
	
	@Column
	private String deptName;
	
	@Column
	private String designation;
}

step24:
-----		
	Create a com.ihub.www.repo package inside "src/main/java" folder.

step25:
-------
	Create a EmployeeRepository.java file inside "com.ihub.www.repo" package.

EmployeeRepository.java
-----------------------
package com.ihub.www.repo;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import com.ihub.www.model.Employee;

@Repository
public interface EmployeeRepository extends JpaRepository<Employee, Long>
{
	
}

step26:
-------
	Create a DepartmentRepository.java file inside "com.ihub.www.repo" package.

DepartmentRepository.java
-------------------------
package com.ihub.www.repo;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import com.ihub.www.model.Department;

@Repository
public interface DepartmentRepository extends JpaRepository<Department, Long> 
{

}

step27:
-------
	Create and use schema in mysql database.
	ex:
		mysql>  create schema  employee_management_system 
		mysql > use employee_management_system 	

step28:
-------
	Goto application.properties and configure below information.

application.properties 
----------------------
#spring application name 
spring.application.name= backend

#port no 
server.port= 9191

# mysql databsae properties 
spring.datasource.driver-class-name= com.mysql.cj.jdbc.Driver
spring.datasource.url= jdbc:mysql://localhost:3306/employee_management_system 
spring.datasource.username= root
spring.datasource.password= root

# Hibernate and JPA properties 
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto= update 
spring.jpa.show-sql= true
spring.jpa.properties.hibernate.format-sql=true

step29:
-------
	Create a com.ihub.www.exception package inside "src/main/java".

step30:
------
	Create a ResourceNotFoundException.java file inside "com.ihub.www.exception" pkg.

ResourceNotFoundException.java
-------------------------------
package com.ihub.www.exception;

import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.ResponseStatus;

@ResponseStatus(value = HttpStatus.NOT_FOUND)
public class ResourceNotFoundException extends RuntimeException 
{
	public ResourceNotFoundException(String message)
	{
		super(message);
	}
}

step31:
-------
	Create a "com.ihub.www.service" package inside "src/main/java".

step32:
------
	Create a EmployeeService.java file inside "com.ihub.www.service" package.

EmployeeService.java
--------------------
package com.ihub.www.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ihub.www.model.Employee;
import com.ihub.www.repo.EmployeeRepository;

@Service
public class EmployeeService 
{
	@Autowired 
	EmployeeRepository employeeRepository;
	
	public Employee addEmployee(Employee employee)
	{
		return employeeRepository.save(employee);
	}
}

step33:
-------
	Create a "com.ihub.www.controller" package inside "src/main/java" folder.

step34:
-------
	Create a "EmployeeController.java" file inside "com.ihub.www.controller" package.

EmployeeController.java
------------------------
package com.ihub.www.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.ihub.www.model.Employee;
import com.ihub.www.service.EmployeeService;

@CrossOrigin(origins = "http://localhost:3000")
@RestController
@RequestMapping("/api/v1")
public class EmployeeController
{
	@Autowired
	EmployeeService employeeService;
	
	@PostMapping("/employees")
	public Employee addEmployee(@RequestBody Employee employee)
	{
		return employeeService.addEmployee(employee);
	}
}

step35:
-------
	Run spring boot starter project.
	

step36:
-------
	Open the POSTMAN and test below API.
	ex:
		Method			API
		------			-----
		POST			http://localhost:9191/api/v1/employees 
					Body 
						Raw (JSON)
					{
						"name":"Alan",
						"doj":"23-08-2025",
						"dept":{
							"deptName":"IT",
							"designation":"Developer"
						}	
					}	

























































